x5$variable <- as.factor(x5$variable)
x5$variable <- reorder(x5$variable, -x5$punctuation)
x5 <- droplevels(unique(x5))
x5 <- x5[order(x5$variable), ]
x5$rank <- 1
x5$rank <- ave(x5$rank, FUN = cumsum)
print(x5)
barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1))
text(x = barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1)),
y = x5$punctuation,
labels = paste0(x5$rank, "º"),
pos = 3,
offset = 0.5)
}
ahpgaussian(data)
names(data)[1]
dim(i)[2]
dim(data)[2]
ahpgaussian <- function(i) {
x2 <- reshape2::melt(i, id.vars = c(1,dim(i)[2]), measure.vars = -c(1, dim(i)[2]))
x2$value <- ifelse(x2$min_max == "min", 1 / x2$value, x2$value)
x2 <- transform(x2,sum = ave(value, criteria, FUN = sum))
x2 <- transform(x2,norm = value / sum)
x2 <- transform(x2,mean = ave(norm, criteria, FUN = mean))
x2 <- transform(x2,sd = ave(norm, criteria, FUN = sd))
x2 <- transform(x2,factor = sd / mean)
print(x2)
x3 <- unique(x2[, c(1, "factor")])
x3$factor <- x3$factor / sum(x3$factor)
print(x3)
x4 <- x2[, c("criteria", "variable", "norm")]
x4 <- reshape2::dcast(x4, formula = criteria ~ variable, value.var = "norm")
x5 <- merge(x4, x3, by = "criteria")
x5 <- reshape2::melt(x5, id.vars = c("criteria","factor"), measure.vars = -c(1, dim(i)[2]))
x5$value_factor <- x5$factor * x5$value
x5 <- x5[, c("criteria", "variable", "value_factor")]
x5$punctuation <- ave(x5$value_factor, x5$variable, FUN = sum)
x5 <- x5[, c("variable", "punctuation")]
x5$variable <- as.factor(x5$variable)
x5$variable <- reorder(x5$variable, -x5$punctuation)
x5 <- droplevels(unique(x5))
x5 <- x5[order(x5$variable), ]
x5$rank <- 1
x5$rank <- ave(x5$rank, FUN = cumsum)
print(x5)
barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1))
text(x = barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1)),
y = x5$punctuation,
labels = paste0(x5$rank, "º"),
pos = 3,
offset = 0.5)
}
ahpgaussian(data)
ahpgaussian <- function(i) {
x2 <- reshape2::melt(i, id.vars = c(1,dim(i)[2]), measure.vars = -c(1, dim(i)[2]))
x2$value <- ifelse(x2$min_max == "min", 1 / x2$value, x2$value)
x2 <- transform(x2,sum = ave(value, criteria, FUN = sum))
x2 <- transform(x2,norm = value / sum)
x2 <- transform(x2,mean = ave(norm, criteria, FUN = mean))
x2 <- transform(x2,sd = ave(norm, criteria, FUN = sd))
x2 <- transform(x2,factor = sd / mean)
print(x2)
x3 <- unique(x2[, c("criteria", "factor")])
x3$factor <- x3$factor / sum(x3$factor)
print(x3)
x4 <- x2[, c("criteria", "variable", "norm")]
x4 <- reshape2::dcast(x4, formula = criteria ~ variable, value.var = "norm")
x5 <- merge(x4, x3, by = "criteria")
x5 <- reshape2::melt(x5, id.vars = c("criteria","factor"), measure.vars = -c(1, dim(i)[2]))
x5$value_factor <- x5$factor * x5$value
x5 <- x5[, c("criteria", "variable", "value_factor")]
x5$punctuation <- ave(x5$value_factor, x5$variable, FUN = sum)
x5 <- x5[, c("variable", "punctuation")]
x5$variable <- as.factor(x5$variable)
x5$variable <- reorder(x5$variable, -x5$punctuation)
x5 <- droplevels(unique(x5))
x5 <- x5[order(x5$variable), ]
x5$rank <- 1
x5$rank <- ave(x5$rank, FUN = cumsum)
print(x5)
barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1))
text(x = barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1)),
y = x5$punctuation,
labels = paste0(x5$rank, "º"),
pos = 3,
offset = 0.5)
}
ahpgaussian(data)
?ahp
?ahp
library(stringi)
stringi::stri_escape_unicode("➛")
library(stringi)
stringi::stri_escape_unicode("º")
#' @importFrom reshape2 melt dcast
#' @importFrom graphics barplot text
#' @importFrom stats ave reorder sd
#' @docType package
#' @name ahpgaussian
#' @export
#'
ahpgaussian <- function(x) {
x2 <- reshape2::melt(x, id.vars = c(1,dim(i)[2]), measure.vars = -c(1, dim(x)[2]))
x2$value <- ifelse(x2$min_max == "min", 1 / x2$value, x2$value)
x2 <- transform(x2,sum = ave(value, criteria, FUN = sum))
x2 <- transform(x2,norm = value / sum)
x2 <- transform(x2,mean = ave(norm, criteria, FUN = mean))
x2 <- transform(x2,sd = ave(norm, criteria, FUN = sd))
x2 <- transform(x2,factor = sd / mean)
print(x2)
x3 <- unique(x2[, c("criteria", "factor")])
x3$factor <- x3$factor / sum(x3$factor)
print(x3)
x4 <- x2[, c("criteria", "variable", "norm")]
x4 <- reshape2::dcast(x4, formula = criteria ~ variable, value.var = "norm")
x5 <- merge(x4, x3, by = "criteria")
x5 <- reshape2::melt(x5, id.vars = c("criteria","factor"), measure.vars = -c(1, dim(x)[2]))
x5$value_factor <- x5$factor * x5$value
x5 <- x5[, c("criteria", "variable", "value_factor")]
x5$punctuation <- ave(x5$value_factor, x5$variable, FUN = sum)
x5 <- x5[, c("variable", "punctuation")]
x5$variable <- as.factor(x5$variable)
x5$variable <- reorder(x5$variable, -x5$punctuation)
x5 <- droplevels(unique(x5))
x5 <- x5[order(x5$variable), ]
x5$rank <- 1
x5$rank <- ave(x5$rank, FUN = cumsum)
print(x5)
barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1))
text(x = barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1)),
y = x5$punctuation,
labels = paste0(x5$rank, "\\u00ba"),
pos = 3,
offset = 0.5)
}
library(ahpgaussian)
library(readr)
data <- read_csv("../data/data2.csv")
ahpgaussian(data)
#' @importFrom reshape2 melt dcast
#' @importFrom graphics barplot text
#' @importFrom stats ave reorder sd
#' @docType package
#' @name ahpgaussian
#' @export
#'
ahpgaussian <- function(x) {
x2 <- reshape2::melt(x, id.vars = c(1,dim(i)[2]), measure.vars = -c(1, dim(x)[2]))
x2$value <- ifelse(x2$min_max == "min", 1 / x2$value, x2$value)
x2 <- transform(x2,sum = ave(value, criteria, FUN = sum))
x2 <- transform(x2,norm = value / sum)
x2 <- transform(x2,mean = ave(norm, criteria, FUN = mean))
x2 <- transform(x2,sd = ave(norm, criteria, FUN = sd))
x2 <- transform(x2,factor = sd / mean)
print(x2)
x3 <- unique(x2[, c("criteria", "factor")])
x3$factor <- x3$factor / sum(x3$factor)
print(x3)
x4 <- x2[, c("criteria", "variable", "norm")]
x4 <- reshape2::dcast(x4, formula = criteria ~ variable, value.var = "norm")
x5 <- merge(x4, x3, by = "criteria")
x5 <- reshape2::melt(x5, id.vars = c("criteria","factor"), measure.vars = -c(1, dim(x)[2]))
x5$value_factor <- x5$factor * x5$value
x5 <- x5[, c("criteria", "variable", "value_factor")]
x5$punctuation <- ave(x5$value_factor, x5$variable, FUN = sum)
x5 <- x5[, c("variable", "punctuation")]
x5$variable <- as.factor(x5$variable)
x5$variable <- reorder(x5$variable, -x5$punctuation)
x5 <- droplevels(unique(x5))
x5 <- x5[order(x5$variable), ]
x5$rank <- 1
x5$rank <- ave(x5$rank, FUN = cumsum)
print(x5)
barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1))
text(x = barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1)),
y = x5$punctuation,
labels = paste0(x5$rank, "\\u00ba"),
pos = 3,
offset = 0.5)
}
library(readr)
data <- read_csv("../data/data2.csv")
ahpgaussian(data)
#' @importFrom reshape2 melt dcast
#' @importFrom graphics barplot text
#' @importFrom stats ave reorder sd
#' @docType package
#' @name ahpgaussian
#' @export
#'
ahpgaussian <- function(x) {
x2 <- reshape2::melt(x, id.vars = c(1,dim(x)[2]), measure.vars = -c(1, dim(x)[2]))
x2$value <- ifelse(x2$min_max == "min", 1 / x2$value, x2$value)
x2 <- transform(x2,sum = ave(value, criteria, FUN = sum))
x2 <- transform(x2,norm = value / sum)
x2 <- transform(x2,mean = ave(norm, criteria, FUN = mean))
x2 <- transform(x2,sd = ave(norm, criteria, FUN = sd))
x2 <- transform(x2,factor = sd / mean)
print(x2)
x3 <- unique(x2[, c("criteria", "factor")])
x3$factor <- x3$factor / sum(x3$factor)
print(x3)
x4 <- x2[, c("criteria", "variable", "norm")]
x4 <- reshape2::dcast(x4, formula = criteria ~ variable, value.var = "norm")
x5 <- merge(x4, x3, by = "criteria")
x5 <- reshape2::melt(x5, id.vars = c("criteria","factor"), measure.vars = -c(1, dim(x)[2]))
x5$value_factor <- x5$factor * x5$value
x5 <- x5[, c("criteria", "variable", "value_factor")]
x5$punctuation <- ave(x5$value_factor, x5$variable, FUN = sum)
x5 <- x5[, c("variable", "punctuation")]
x5$variable <- as.factor(x5$variable)
x5$variable <- reorder(x5$variable, -x5$punctuation)
x5 <- droplevels(unique(x5))
x5 <- x5[order(x5$variable), ]
x5$rank <- 1
x5$rank <- ave(x5$rank, FUN = cumsum)
print(x5)
barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1))
text(x = barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1)),
y = x5$punctuation,
labels = paste0(x5$rank, "\\u00ba"),
pos = 3,
offset = 0.5)
}
ahpgaussian(data)
#' @importFrom reshape2 melt dcast
#' @importFrom graphics barplot text
#' @importFrom stats ave reorder sd
#' @docType package
#' @name ahpgaussian
#' @export
#'
ahpgaussian <- function(x) {
x2 <- reshape2::melt(x, id.vars = c(1,dim(x)[2]), measure.vars = -c(1, dim(x)[2]))
x2$value <- ifelse(x2$min_max == "min", 1 / x2$value, x2$value)
x2 <- transform(x2,sum = ave(value, criteria, FUN = sum))
x2 <- transform(x2,norm = value / sum)
x2 <- transform(x2,mean = ave(norm, criteria, FUN = mean))
x2 <- transform(x2,sd = ave(norm, criteria, FUN = sd))
x2 <- transform(x2,factor = sd / mean)
print(x2)
x3 <- unique(x2[, c("criteria", "factor")])
x3$factor <- x3$factor / sum(x3$factor)
print(x3)
x4 <- x2[, c("criteria", "variable", "norm")]
x4 <- reshape2::dcast(x4, formula = criteria ~ variable, value.var = "norm")
x5 <- merge(x4, x3, by = "criteria")
x5 <- reshape2::melt(x5, id.vars = c("criteria","factor"), measure.vars = -c(1, dim(x)[2]))
x5$value_factor <- x5$factor * x5$value
x5 <- x5[, c("criteria", "variable", "value_factor")]
x5$punctuation <- ave(x5$value_factor, x5$variable, FUN = sum)
x5 <- x5[, c("variable", "punctuation")]
x5$variable <- as.factor(x5$variable)
x5$variable <- reorder(x5$variable, -x5$punctuation)
x5 <- droplevels(unique(x5))
x5 <- x5[order(x5$variable), ]
x5$rank <- 1
x5$rank <- ave(x5$rank, FUN = cumsum)
print(x5)
barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1))
text(x = barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1)),
y = x5$punctuation,
labels = paste0(x5$rank, \\u00ba),
#' @importFrom reshape2 melt dcast
#' @importFrom graphics barplot text
#' @importFrom stats ave reorder sd
#' @docType package
#' @name ahpgaussian
#' @export
#'
ahpgaussian <- function(x) {
x2 <- reshape2::melt(x, id.vars = c(1,dim(x)[2]), measure.vars = -c(1, dim(x)[2]))
x2$value <- ifelse(x2$min_max == "min", 1 / x2$value, x2$value)
x2 <- transform(x2,sum = ave(value, criteria, FUN = sum))
x2 <- transform(x2,norm = value / sum)
x2 <- transform(x2,mean = ave(norm, criteria, FUN = mean))
x2 <- transform(x2,sd = ave(norm, criteria, FUN = sd))
x2 <- transform(x2,factor = sd / mean)
print(x2)
x3 <- unique(x2[, c("criteria", "factor")])
x3$factor <- x3$factor / sum(x3$factor)
print(x3)
x4 <- x2[, c("criteria", "variable", "norm")]
x4 <- reshape2::dcast(x4, formula = criteria ~ variable, value.var = "norm")
x5 <- merge(x4, x3, by = "criteria")
x5 <- reshape2::melt(x5, id.vars = c("criteria","factor"), measure.vars = -c(1, dim(x)[2]))
x5$value_factor <- x5$factor * x5$value
x5 <- x5[, c("criteria", "variable", "value_factor")]
x5$punctuation <- ave(x5$value_factor, x5$variable, FUN = sum)
x5 <- x5[, c("variable", "punctuation")]
x5$variable <- as.factor(x5$variable)
x5$variable <- reorder(x5$variable, -x5$punctuation)
x5 <- droplevels(unique(x5))
x5 <- x5[order(x5$variable), ]
x5$rank <- 1
x5$rank <- ave(x5$rank, FUN = cumsum)
print(x5)
barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1))
text(x = barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1)),
y = x5$punctuation,
labels = paste0(x5$rank),
pos = 3,
offset = 0.5)
}
ahpgaussian(data)
print(x2)
print(data)
print(data,mtcars)
print(list(data,mtcars))
data
library(tidyverse)
data %>% select(1:4)
data %>% select(1:4) %>% pivot_longer(cols=-1)
data %>% select(1:4) %>% pivot_longer(cols=-1) %>% pivot_wider(names_from = criteria, values_from = value)
data %>% select(1:4) %>% pivot_longer(cols=-1) %>% pivot_wider(names_from = criteria, values_from = value) %>% clipr::write_clip()
data %>% select(1:4) %>% pivot_longer(cols=-1) %>% pivot_wider(names_from = criteria, values_from = value) %>% clipr::write_clip()
ahpgaussian <- function(x) {
x2 <- reshape2::melt(x, id.vars = c(1,dim(x)[2]), measure.vars = -c(1, dim(x)[2]))
x2$value <- ifelse(x2$min_max == "min", 1 / x2$value, x2$value)
x2 <- transform(x2,sum = ave(value, criteria, FUN = sum))
x2 <- transform(x2,norm = value / sum)
x2 <- transform(x2,mean = ave(norm, criteria, FUN = mean))
x2 <- transform(x2,sd = ave(norm, criteria, FUN = sd))
x2 <- transform(x2,factor = sd / mean)
print(x2)}
ahpgaussian(data)
A<- print(x2)}
ahpgaussian(data)
A
A<- as.data.frame(x2)}
ahpgaussian <- function(x) {
x2 <- reshape2::melt(x, id.vars = c(1,dim(x)[2]), measure.vars = -c(1, dim(x)[2]))
x2$value <- ifelse(x2$min_max == "min", 1 / x2$value, x2$value)
x2 <- transform(x2,sum = ave(value, criteria, FUN = sum))
x2 <- transform(x2,norm = value / sum)
x2 <- transform(x2,mean = ave(norm, criteria, FUN = mean))
x2 <- transform(x2,sd = ave(norm, criteria, FUN = sd))
x2 <- transform(x2,factor = sd / mean)
A<- as.data.frame(x2)}
ahpgaussian(data)
A
tab <- clipr::read_clip_tbl()
tab
tab %>% pivot_wider(names_from = variable, values_from = value)
tab %>% pivot_wider(names_from = variable, values_from = norm)
tab %>% pivot_wider(names_from = variable, values_from = norm) %>% clipr::write_clip()
tab %>% pivot_wider(names_from = variable, values_from = norm) %>% clipr::write_clip()
x2 <- reshape2::melt(data, id.vars = c(1,dim(data)[2]), measure.vars = -c(1, dim(data)[2]))
x2$value <- ifelse(x2$min_max == "min", 1 / x2$value, x2$value)
x2 <- transform(x2,sum = ave(value, criteria, FUN = sum))
x2 <- transform(x2,norm = value / sum)
x2 <- transform(x2,mean = ave(norm, criteria, FUN = mean))
x2 <- transform(x2,sd = ave(norm, criteria, FUN = sd))
x2 <- transform(x2,factor = sd / mean)
print(x2)
x3 <- unique(x2[, c("criteria", "factor")])
x3$factor <- x3$factor / sum(x3$factor)
print(x3)
x2
x2 %>% select(-c(2:3))
x2 %>% select(-c(2:4)) %>%
)
x2 %>% select(-c(2:4))
x2 %>% select(-c(2:5))
x2 %>% select(-c(2:5))
x2 %>% select(-c(2:6))
x2 %>% select(-c(2:6)) %>% arrange(crimtab)
x2 %>% select(-c(2:6)) %>% arrange(criteria)
x2 %>% select(-c(2:6)) %>% arrange(criteria) %>% unique()
x2 %>% select(-c(2:6)) %>% arrange(criteria) %>% unique() %>% clipr::write_clip()
x3
x3 %>% clipr::write_clip()
x2 <- reshape2::melt(data, id.vars = c(1,dim(data)[2]), measure.vars = -c(1, dim(data)[2]))
x2$value <- ifelse(x2$min_max == "min", 1 / x2$value, x2$value)
x2 <- transform(x2,sum = ave(value, criteria, FUN = sum))
x2 <- transform(x2,norm = value / sum)
x2 <- transform(x2,mean = ave(norm, criteria, FUN = mean))
x2 <- transform(x2,sd = ave(norm, criteria, FUN = sd))
x2 <- transform(x2,factor = sd / mean)
print(x2)
x3 <- unique(x2[, c("criteria", "factor")])
x3$factor <- x3$factor / sum(x3$factor)
print(x3)
x4 <- x2[, c("criteria", "variable", "norm")]
x4 <- reshape2::dcast(x4, formula = criteria ~ variable, value.var = "norm")
x5 <- merge(x4, x3, by = "criteria")
x5 <- reshape2::melt(x5, id.vars = c("criteria","factor"), measure.vars = -c(1, dim(data)[2]))
x5$value_factor <- x5$factor * x5$value
x5 <- x5[, c("criteria", "variable", "value_factor")]
x5$punctuation <- ave(x5$value_factor, x5$variable, FUN = sum)
x5 <- x5[, c("variable", "punctuation")]
x5$variable <- as.factor(x5$variable)
x5$variable <- reorder(x5$variable, -x5$punctuation)
x5 <- droplevels(unique(x5))
x5 <- x5[order(x5$variable), ]
x5$rank <- 1
x5$rank <- ave(x5$rank, FUN = cumsum)
print(x5)
barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1))
text(x = barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1)),
y = x5$punctuation,
labels = paste0(x5$rank),
pos = 3,
offset = 0.5)
x %>% clipr::write_clip()
x5 %>% clipr::write_clip()
data %>% as.data.frame()
ahpgaussian <- function(x) {
x2 <- reshape2::melt(x, id.vars = c(1,dim(x)[2]), measure.vars = -c(1, dim(x)[2]))
x2$value <- ifelse(x2$min_max == "min", 1 / x2$value, x2$value)
x2 <- transform(x2,sum = ave(value, criteria, FUN = sum))
x2 <- transform(x2,norm = value / sum)
x2 <- transform(x2,mean = ave(norm, criteria, FUN = mean))
x2 <- transform(x2,sd = ave(norm, criteria, FUN = sd))
x2 <- transform(x2,factor = sd / mean)
print(x2)
x3 <- unique(x2[, c("criteria", "factor")])
x3$factor <- x3$factor / sum(x3$factor)
print(x3)
x4 <- x2[, c("criteria", "variable", "norm")]
x4 <- reshape2::dcast(x4, formula = criteria ~ variable, value.var = "norm")
x5 <- merge(x4, x3, by = "criteria")
x5 <- reshape2::melt(x5, id.vars = c("criteria","factor"), measure.vars = -c(1, dim(x)[2]))
x5$value_factor <- x5$factor * x5$value
x5 <- x5[, c("criteria", "variable", "value_factor")]
x5$punctuation <- ave(x5$value_factor, x5$variable, FUN = sum)
x5 <- x5[, c("variable", "punctuation")]
x5$variable <- as.factor(x5$variable)
x5$variable <- reorder(x5$variable, -x5$punctuation)
x5 <- droplevels(unique(x5))
x5 <- x5[order(x5$variable), ]
x5$rank <- 1
x5$rank <- ave(x5$rank, FUN = cumsum)
print(x5)
barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1))
text(x = barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1)),
y = x5$punctuation,
labels = paste0(x5$rank),
pos = 3,
offset = 0.5)
}
library(ahpgaussian)
library(readr)
data <- read_csv("../data/data2.csv")
ahpgaussian(data)
ahpgaussian(data)
source("C:/tcc/teste.R")
library(ahpgaussian)
library(readr)
data <- read_csv("../data/data2.csv")
ahpgaussian(data)
setwd("C:/tcc/ahpgaussian/ahpgaussian")
setwd("C:/tcc/ahpgaussian/ahpgaussian")
data <- read_csv("C:/tcc/ahpgaussian/data/data2.csv")
#' @importFrom reshape2 melt dcast
#' @importFrom graphics barplot text
#' @importFrom stats ave reorder sd
#' @docType package
#' @name ahpgaussian
#' @export
#'
ahpgaussian <- function(x) {
x2 <- reshape2::melt(x, id.vars = c(1,dim(x)[2]), measure.vars = -c(1, dim(x)[2]))
x2$value <- ifelse(x2$min_max == "min", 1 / x2$value, x2$value)
x2 <- transform(x2,sum = ave(value, criteria, FUN = sum))
x2 <- transform(x2,norm = value / sum)
x2 <- transform(x2,mean = ave(norm, criteria, FUN = mean))
x2 <- transform(x2,sd = ave(norm, criteria, FUN = sd))
x2 <- transform(x2,factor = sd / mean)
print(x2)
x3 <- unique(x2[, c("criteria", "factor")])
x3$factor <- x3$factor / sum(x3$factor)
print(x3)
x4 <- x2[, c("criteria", "variable", "norm")]
x4 <- reshape2::dcast(x4, formula = criteria ~ variable, value.var = "norm")
x5 <- merge(x4, x3, by = "criteria")
x5 <- reshape2::melt(x5, id.vars = c("criteria","factor"), measure.vars = -c(1, dim(x)[2]))
x5$value_factor <- x5$factor * x5$value
x5 <- x5[, c("criteria", "variable", "value_factor")]
x5$punctuation <- ave(x5$value_factor, x5$variable, FUN = sum)
x5 <- x5[, c("variable", "punctuation")]
x5$variable <- as.factor(x5$variable)
x5$variable <- reorder(x5$variable, -x5$punctuation)
x5 <- droplevels(unique(x5))
x5 <- x5[order(x5$variable), ]
x5$rank <- 1
x5$rank <- ave(x5$rank, FUN = cumsum)
print(x5)
#barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1))
text(x = barplot(x5$punctuation, names.arg = x5$variable, col = x5$variable, ylim = c(0, max(x5$punctuation) * 1.1)),
y = x5$punctuation,
labels = paste0(x5$rank),
pos = 3,
offset = 0.5)
}
ahpgaussian(data)
ahpgaussian(data)
library(ahpgaussian)
library(readr)
data <- read_csv("C:/tcc/ahpgaussian/data/data2.csv")
ahpgaussian(data)
ahpgaussian(data)
data
setwd("C:/tcc/ahpgaussian/ahpgaussian")
library(ahpgaussian)
library(readr)
data <- read_csv("C:/tcc/ahpgaussian/data/data2.csv")
ahpgaussian(data)
data <- read_csv("C:/tcc/ahpgaussian/data/data.csv")
ahpgaussian(data)
data <- read_csv("C:/tcc/ahpgaussian/data/data2.csv")
ahpgaussian(data)
